function fly()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/GhostPlayer352/Test4/main/Vehicle%20Fly%20Gui'))()
end

function dex()
    loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Dex-mobile-by-Redz-25499"))()
end

function tp()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Generallua/Script-/refs/heads/main/Teleport%20GUI"))()
end

function rspy()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Turtle-Brand/Turtle-Spy/main/source.lua", true))()
end

function aimt()
local UIS = game:GetService("UserInputService")
local selectedObject = nil
local selectionBox = Instance.new("SelectionBox")
local scriptActive = true

local function createGUI()
    local player = game.Players.LocalPlayer
    local PlayerGui = player:WaitForChild("PlayerGui")

    local ScreenGui = Instance.new("ScreenGui")
    local CopyButton = Instance.new("TextButton")
    local CloseButton = Instance.new("TextButton")
    local SpeedInput = Instance.new("TextBox")
    local QuantityInput = Instance.new("TextBox")

    ScreenGui.Parent = PlayerGui

    CopyButton.Parent = ScreenGui
    CopyButton.Size = UDim2.new(0, 150, 0, 50)
    CopyButton.Position = UDim2.new(0.5, -75, 0.8, 0)
    CopyButton.Text = "Copy Pull Script"
    CopyButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    CopyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CopyButton.BorderSizePixel = 2
    CopyButton.BorderColor3 = Color3.fromRGB(60, 60, 60)
    CopyButton.Font = Enum.Font.SourceSansBold
    CopyButton.TextSize = 14
    CopyButton.Visible = false

    CloseButton.Parent = ScreenGui
    CloseButton.Size = UDim2.new(0, 30, 0, 30)
    CloseButton.Position = UDim2.new(1, -40, 0, 10)
    CloseButton.Text = "X"
    CloseButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseButton.BorderSizePixel = 0
    CloseButton.Font = Enum.Font.SourceSansBold
    CloseButton.TextSize = 20
    CloseButton.AutoButtonColor = false

    QuantityInput.Parent = ScreenGui
    QuantityInput.Size = UDim2.new(0, 100, 0, 50)
    QuantityInput.Position = UDim2.new(0.5, -50, 0.6, 0)
    QuantityInput.PlaceholderText = "Enter quantity"
    QuantityInput.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    QuantityInput.TextColor3 = Color3.fromRGB(255, 255, 255)
    QuantityInput.BorderSizePixel = 2
    QuantityInput.BorderColor3 = Color3.fromRGB(60, 60, 60)
    QuantityInput.Font = Enum.Font.SourceSansBold
    QuantityInput.TextSize = 14

    SpeedInput.Parent = ScreenGui
    SpeedInput.Size = UDim2.new(0, 100, 0, 50)
    SpeedInput.Position = UDim2.new(0.5, -50, 0.7, 0)
    SpeedInput.PlaceholderText = "Enter seconds"
    SpeedInput.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    SpeedInput.TextColor3 = Color3.fromRGB(255, 255, 255)
    SpeedInput.BorderSizePixel = 2
    SpeedInput.BorderColor3 = Color3.fromRGB(60, 60, 60)
    SpeedInput.Font = Enum.Font.SourceSansBold
    SpeedInput.TextSize = 14

    local character = player.Character or player.CharacterAdded:Wait()

    local function findNearestObjects(objectName, quantity)
        local foundObjects = {}
        local distances = {}
        for _, object in pairs(workspace:GetDescendants()) do
            if object:IsA("BasePart") and object.Name == objectName then
                local distance = (character:WaitForChild("HumanoidRootPart").Position - object.Position).Magnitude
                table.insert(foundObjects, object)
                table.insert(distances, distance)
            end
        end

        local sortedObjects = {}
        for i = 1, math.min(quantity, #foundObjects) do
            local minIndex = nil
            local minValue = math.huge
            for index, distance in pairs(distances) do
                if distance < minValue then
                    minValue = distance
                    minIndex = index
                end
            end
            if minIndex then
                table.insert(sortedObjects, foundObjects[minIndex])
                table.remove(foundObjects, minIndex)
                table.remove(distances, minIndex)
            end
        end

        return sortedObjects
    end

    local mouseClickConnection

    mouseClickConnection = player:GetMouse().Button1Down:Connect(function()
        if not scriptActive then return end
        local target = player:GetMouse().Target
        if target and target:IsA("BasePart") then
            if selectedObject then
                selectionBox.Parent = nil
            end
            selectedObject = target
            selectionBox.Parent = selectedObject
            selectionBox.Adornee = selectedObject
            selectionBox.Color3 = Color3.fromRGB(0, 0, 255)
            selectionBox.LineThickness = 0.05
            CopyButton.Visible = true
        end
    end)

    CopyButton.MouseButton1Click:Connect(function()
        if selectedObject then
            local pullDuration = tonumber(SpeedInput.Text) or 10
            local selectedObjectName = selectedObject.Name
            local quantity = tonumber(QuantityInput.Text) or 1

            local pullItemScript = [[
local TweenService = game:GetService("TweenService")
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

local function findNearestObjects(objectName, quantity)
    local foundObjects = {}
    local distances = {}
    for _, object in pairs(workspace:GetDescendants()) do
        if object:IsA("BasePart") and object.Name == objectName then
            local distance = (humanoidRootPart.Position - object.Position).Magnitude
            table.insert(foundObjects, object)
            table.insert(distances, distance)
        end
    end

    local sortedObjects = {}
    for i = 1, quantity do
        local minIndex = nil
        local minValue = math.huge
        for index, distance in pairs(distances) do
            if distance < minValue then
                minValue = distance
                minIndex = index
            end
        end
        if minIndex then
            table.insert(sortedObjects, foundObjects[minIndex])
            table.remove(foundObjects, minIndex)
            table.remove(distances, minIndex)
        end
    end

    return sortedObjects
end

local nearestObjects = findNearestObjects("]] .. selectedObjectName .. [[", ]] .. tostring(quantity) .. [[)

for _, nearestObject in pairs(nearestObjects) do
    local teleportInfo = TweenInfo.new(]] .. tostring(pullDuration) .. [[, Enum.EasingStyle.Linear)
    local teleportTween = TweenService:Create(nearestObject, teleportInfo, {CFrame = humanoidRootPart.CFrame})
    teleportTween:Play()
end
            ]]

            setclipboard(pullItemScript)
        end
    end)

    CloseButton.MouseButton1Click:Connect(function()
        scriptActive = false
        CopyButton.Visible = false
        if selectedObject then
            selectionBox.Parent = nil
            selectedObject = nil
        end
        mouseClickConnection:Disconnect()
        ScreenGui:Destroy()
    end)
end

createGUI()
                                                                                                          end
